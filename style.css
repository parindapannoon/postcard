/* General Style */

* { 
	padding: 0%; 
	margin: 0%; 
	box-sizing: border-box; 
} 
.pin {
		width: 50px;
		height: 50px;
		background-image: url("./message.png");
		background-size: cover; /* This will cover the entire element area */
    	background-position: center; /* Center the image within the element */
		position: relative;
		animation-name: example;
		animation-duration: 6s;
		animation-iteration-count: 100;
		
	}
		@keyframes example {
			100% {background-image: "./message.png"; left:1000px; top:60px;}
	
			0%   {background-image: "./message.png"; left:360px; top:600px;}
			
		  
	  }

body { 
	width: 100vw; 
	height: 100vh; 
	overflow-x: hidden;
    
} 

/* Container Style */
 
.container { 

	position: absolute; 
	width: 100%; 
	height: 100%; 
	overflow: hidden;
} 



/* Style Snowballs and Snowflakes */
:root {
    --dot-radius:  30px;
    --path-radius: 150px;
    --vp-width:    700px;
    --vp-height:   700px;
  
    --moving-dot-color: hsl(45, 99%, 52%);
  }
  
  
  /* --------------------------------------------------
     Elements
     -------------------------------------------------- */
  
  html,
  body,
  main {
    height: 100vh;
    width: 100vw;
    margin: 0;
  }
  

  main {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  
  a {
    color: var(--moving-dot-color);
  }
  
  /* --------------------------------------------------
     Classes
     -------------------------------------------------- */

  .dot--light {
    fill: var(--moving-dot-color);
    filter: url('#glow');
  }
  
  .dot--glowing {
    fill: var(--moving-dot-color);
    filter: url('#outer-glow');
  }
  
  .scanner {
    will-change: transform;
    animation: 4s scan 0s infinite linear both;
  }
  
  .circles {
    filter: url("#goo");
  }
  
  .centered {
    /* FF lets us use percentages, but Chrome doesn't like that. That
     * means we have to hard-code the dimensions of the viewport.
     */
    transform:
      translate(
        calc((var(--vp-width) * 0.5) - var(--dot-radius)),
        calc((var(--vp-height) * 0.5) - var(--dot-radius))
      );
  }

  
  
  /* --------------------------------------------------
     Animations
     -------------------------------------------------- */
  
   /* Defines the circular path our dots will take. We use 2 `rotate`
    * functions to contrain the plane containing our dots. Without
    * this, the dots will go out of orbit. See this brilliant post for
    * a much better explanation: 
    * http://www.useragentman.com/blog/2013/03/03/animating-circular-paths-using-css3-transitions/
    */
  @keyframes scan {
    from {
      transform: rotate(0deg) translateY(calc(var(--path-radius) * -1)) rotate(0deg);
    }
  
    to {
      transform: rotate(360deg) translateY(calc(var(--path-radius) * -1)) rotate(-360deg);
    }
  }
.snow-ball-container .snow-ball { 
	position: absolute; 
	height: 10px; 
	width: 10px; 
	border-radius: 50%; 
	background: rgb(255, 255, 255); 

} 

.snow-ball-container .snow-ball:nth-child(even) { 
	position: absolute; 
	width: 16px; 
	height: 16px; 
	animation: flake-motion 10s linear infinite; 
} 

/* Position the Snowballs above the screen */

.snow-ball-container .snow-ball:nth-child(1) { 
	top: -50%; 
	left: 5%; 
	width: 20px; 
	height: 20px; 
	animation: snowball-animation 12s linear 2s infinite; 
} 

.snow-ball-container .snow-ball:nth-child(2) { 
	top: -20%; 
	left: 10%; 
} 

.snow-ball-container .snow-ball:nth-child(3) { 
	top: -50%; 
	left: 15%; 
	animation: snowball-animation 12s linear infinite; 
} 

.snow-ball-container .snow-ball:nth-child(4) { 
	top: -10%; 
	left: 20%; 
} 

.snow-ball-container .snow-ball:nth-child(5) { 
	top: -20%; 
	left: 25%; 
	width: 20px; 
	height: 20px; 
	animation: snowball-animation 12s linear 2s infinite; 
} 

.snow-ball-container .snow-ball:nth-child(6) { 
	top: -40%; 
	left: 30%; 
} 

.snow-ball-container .snow-ball:nth-child(7) { 
	top: -30%; 
	left: 35%; 
	width: 5px; 
	height: 5px; 
	animation: snowball-animation 12s linear infinite; 
} 

.snow-ball-container .snow-ball:nth-child(8) { 
	top: -20%; 
	left: 40%; 
} 

.snow-ball-container .snow-ball:nth-child(9) { 
	top: -50%; 
	left: 45%; 
	width: 5px; 
	height: 5px; 
	animation: snowball-animation 12s linear 2s infinite; 
} 

.snow-ball-container .snow-ball:nth-child(10) { 
	top: -5%; 
	left: 50%; 
} 

.snow-ball-container .snow-ball:nth-child(11) { 
	top: -20%; 
	left: 60%; 
	animation: snowball-animation 12s linear infinite; 
} 

.snow-ball-container .snow-ball:nth-child(12) { 
	top: -10%; 
	left: 70%; 
} 

.snow-ball-container .snow-ball:nth-child(13) { 
	top: -50%; 
	left: 80%; 
	width: 5px; 
	height: 5px; 
	animation: snowball-animation 12s linear 2s infinite; 
} 

.snow-ball-container .snow-ball:nth-child(14) { 
	top: -20%; 
	left: 90%; 
} 

.snow-ball-container .snow-ball:nth-child(15) { 
	top: -50%; 
	left: 95%; 
	width: 25px; 
	height: 25px; 
	animation: snowball-animation 12s linear infinite; 
} 



/* Define animations of Snowball and Snowflakes */

@keyframes snowball-animation { 
	0% { 
		transform: translate(0); 
		opacity: 1; 
	} 

	20% { 
		transform: translate(4px, 100px); 
		opacity: 0.8; 
	} 

	40% { 
		transform: translate(-7px, 200px); 
		opacity: 0.7; 
	} 

	60% { 
		transform: translate(10px, 400px); 
		opacity: 0.5; 
	} 

	80% { 
		transform: translate(-14px, 700px); 
		opacity: 0.2; 
	} 

	100% { 
		transform: translate(16px, 900px); 
		opacity: 0; 
	} 
} 

@keyframes flake-motion { 
	0% { 
		transform: translate(-2px, 0); 
		opacity: 1; 
	} 

	20% { 
		transform: translate(-9px, 200px); 
		opacity: 0.9; 
	} 

	40% { 
		transform: translate(14px, 300px); 
		opacity: 0.7; 
	} 

	60% { 
		transform: translate(-22px, 400px); 
		opacity: 0.6; 
	} 

	80% { 
		transform: translate(30px, 600px); 
		opacity: 0.5; 
	} 

	90% { 
		transform: translate(-40px 800px); 
		opacity: 0.3; 
	} 

	100% { 
		transform: translate(52px, 1000px); 
		opacity: 0; 
	} 
}


